//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Marain.Tenancy.ClientTenantProvider.TenancyClientSchemaTypes;
public readonly partial struct UpdateTenantJsonPatchEntry
{
    /// <summary>
    /// A type generated from a JsonSchema specification.
    /// </summary>
    public readonly partial struct OpEntity
    {
        /// <summary>
        /// Permitted values.
        /// </summary>
        public static class EnumValues
        {
            /// <summary>
            /// Add.
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            public static readonly OpEntity Add = OpEntity.Parse("\"add\"");
            /// <summary>
            /// Replace.
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            public static readonly OpEntity Replace = OpEntity.Parse("\"replace\"");
            /// <summary>
            /// Remove.
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            public static readonly OpEntity Remove = OpEntity.Parse("\"remove\"");
            /// <summary>
            /// [{Title} || Item 0] (with predictable naming).
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            internal static readonly OpEntity Item0 = OpEntity.Parse("\"add\"");
            /// <summary>
            /// [{Title} || Item 1] (with predictable naming).
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            internal static readonly OpEntity Item1 = OpEntity.Parse("\"replace\"");
            /// <summary>
            /// [{Title} || Item 2] (with predictable naming).
            /// </summary>
            /// <remarks>
            /// {Description}.
            /// </remarks>
            internal static readonly OpEntity Item2 = OpEntity.Parse("\"remove\"");
        }
    }
}