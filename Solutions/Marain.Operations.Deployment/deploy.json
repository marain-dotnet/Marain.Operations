{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "marainPrefix": {
      "type": "string"
    },
    "appName": {
      "type": "string"
    },
    "environmentSuffix": {
      "type": "string"
    },
    "operationsStorageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "statusFunctionAnonymousAccessEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "controlFunctionAnonymousAccessEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "appInsightsInstrumentationKey": {
      "type": "string"
    },
    "controlFunctionEasyAuthAadClientId": {
      "type": "string"
    },
    "tenancyServiceBaseUri": {
      "type": "string"
    },
    "tenancyServiceResourceIdForMsiAuthentication": {
      "type": "string"
    },
    "marainServiceTenantId": {
      "type": "string"
    },
    "marainServiceTenantDisplayName": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    }
  },
  "variables": {
    "resourceNameRoot": "[concat(parameters('marainPrefix'), parameters('environmentSuffix'))]",
    "defaultName": "[concat(variables('resourceNameRoot'), parameters('appName'))]",
    "operationsStorageName": "[substring(concat(variables('resourceNameRoot'), parameters('appName'), uniqueString(resourceGroup().id)), 0, 24)]",
    "operationsStorageKeySecretName": "OperationsStorageAccountKey",
    "statusFunctionsAppName": "[concat(variables('defaultName'), 'status')]",
    "controlFunctionsAppName": "[concat(variables('defaultName'), 'control')]",
    "keyVaultName": "[substring(concat(variables('resourceNameRoot'), parameters('appName'), uniqueString(resourceGroup().id)), 0, 24)]",
    "keyVaultDiagnosticStorageAccountName": "[substring(concat(variables('resourceNameRoot'), parameters('appName'), 'kvdiag', uniqueString(resourceGroup().id)), 0, 24)]",
    "tenantId": "[subscription().tenantID]",
    "subscriptionId": "[subscription().subscriptionID]",
    "statusFunctionDeployName": "[concat(deployment().name, '-ops-status-functions-app')]",
    "controlFunctionDeployName": "[concat(deployment().name, '-ops-control-functions-app')]",
    "keyVaultDeployName": "[concat(deployment().name, '-key_vault')]",
    "operationsStorageDeployName": "[concat(deployment().name, '-ops-storage-account')]",
    "diagnosticsStorageDeployName": "[concat(deployment().name, '-diagnostics-storage-account')]",
    "statusAppKeyVaultAccessPolicyDeployName": "[concat(deployment().name, '-ops-status-function-key-vault-access')]",
    "controlAppKeyVaultAccessPolicyDeployName": "[concat(deployment().name, '-ops-control-function-key-vault-access')]",
    "tagValues": {
      "prefix": "[parameters('marainPrefix')]",
      "appName": "[parameters('appName')]",
      "environment": "[parameters('environmentSuffix')]"
    }
  },
  "resources": [
    {
      "name": "[variables('keyVaultDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('diagnosticsStorageDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "tenantId": {
            "value": "[variables('tenantId')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[variables('keyVaultDiagnosticStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('operationsStorageDeployName'), '-key-vault-secret')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('operationsStorageDeployName')]",
        "[variables('keyVaultDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault-secret.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "secretName": {
            "value": "[variables('operationsStorageKeySecretName')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "contentValue": {
            "value": "[reference(variables('operationsStorageDeployName'), '2016-09-01').outputs.storageAccountKey.value]"
          }
        }
      }
    },
    {
      "name": "[variables('statusFunctionDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionsAppName": { "value": "[variables('statusFunctionsAppName')]" },
          "_artifactsLocation": { "value": "[parameters('_artifactsLocation')]" },
          "_artifactsLocationSasToken": { "value": "[parameters('_artifactsLocationSasToken')]" }
        }
      }
    },
    {
      "name": "[concat(variables('statusFunctionDeployName'), '-settings')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('statusFunctionDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app-settings-operations-status-host.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountConnectionString": { "value": "[reference(variables('statusFunctionDeployName'), '2016-09-01').outputs.storageAccountConnectionString.value]" },
          "runFromPackage": { "value": "1" },
          "functionsAppName": { "value": "[variables('statusFunctionsAppName')]" },
          "applicationInsightsInstrumentationKey": { "value": "[parameters('appInsightsInstrumentationKey')]" },
          "tenancyServiceBaseUri": { "value": "[parameters('tenancyServiceBaseUri')]" },
          "tenancyServiceResourceIdForMsiAuthentication": { "value": "[parameters('tenancyServiceResourceIdForMsiAuthentication')]" },
          "marainServiceTenantId": { "value": "[parameters('marainServiceTenantId')]" },
          "marainServiceTenantDisplayName": { "value": "[parameters('marainServiceTenantDisplayName')]" }
        }
      }
    },
    {
      "name": "[variables('statusAppKeyVaultAccessPolicyDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('statusFunctionDeployName')]",
        "[variables('keyVaultDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault-access-policy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "objectName": {
            "value": "[variables('statusFunctionsAppName')]"
          },
          "objectResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "objectResourceType": {
            "value": "Microsoft.Web/sites"
          },
          "permissions": {
            "value": {
              "secrets": [
                "get"
              ]
            }
          }
        }
      }
    },
    {
      "name": "[variables('controlFunctionDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionsAppName": { "value": "[variables('controlFunctionsAppName')]" },
          "_artifactsLocation": { "value": "[parameters('_artifactsLocation')]" },
          "_artifactsLocationSasToken": { "value": "[parameters('_artifactsLocationSasToken')]" }
        }
      }
    },
    {
      "name": "[concat(variables('controlFunctionDeployName'), '-auth-settings')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('controlFunctionDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app-auth-settings.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionsAppName": {
            "value": "[variables('controlFunctionsAppName')]"
          },
          "aadTenantId": {
            "value": "[variables('tenantId')]"
          },
          "aadClientId": {
            "value": "[parameters('controlFunctionEasyAuthAadClientId')]"
          },
          "unauthenticatedClientAction": {
            "value": "[if(parameters('controlFunctionAnonymousAccessEnabled'), 'AllowAnonymous', 'RedirectToLoginPage')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('controlFunctionDeployName'), '-settings')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('controlFunctionDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app-settings-operations-control-host.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountConnectionString": { "value": "[reference(variables('controlFunctionDeployName'), '2016-09-01').outputs.storageAccountConnectionString.value]" },
          "runFromPackage": { "value": "1" },
          "functionsAppName": { "value": "[variables('controlFunctionsAppName')]" },
          "applicationInsightsInstrumentationKey": { "value": "[parameters('appInsightsInstrumentationKey')]" },
          "tenancyServiceBaseUri": { "value": "[parameters('tenancyServiceBaseUri')]" },
          "tenancyServiceResourceIdForMsiAuthentication": { "value": "[parameters('tenancyServiceResourceIdForMsiAuthentication')]" },
          "operationsStatusServiceBaseUrl": { "value": "[concat('https://', variables('statusFunctionsAppName'), '.azurewebsites.net/')]" },
          "marainServiceTenantId": { "value": "[parameters('marainServiceTenantId')]" },
          "marainServiceTenantDisplayName": { "value": "[parameters('marainServiceTenantDisplayName')]" }
        }
      }
    },
    {
      "name": "[variables('controlAppKeyVaultAccessPolicyDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('controlFunctionDeployName')]",
        "[variables('keyVaultDeployName')]",
        "[variables('statusAppKeyVaultAccessPolicyDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault-access-policy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "objectName": {
            "value": "[variables('controlFunctionsAppName')]"
          },
          "objectResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "objectResourceType": {
            "value": "Microsoft.Web/sites"
          },
          "permissions": {
            "value": {
              "secrets": [
                "get"
              ]
            }
          }
        }
      }
    },
    {
      "name": "[variables('operationsStorageDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/storage-account.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('operationsStorageName')]"
          },
          "storageAccountType": {
            "value": "[parameters('operationsStorageSku')]"
          },
          "storageAccountLocation": {
            "value": "[resourceGroup().location]"
          },
          "tagValues": {
            "value": "[variables('tagValues')]"
          }
        }
      }
    },
    {
      "name": "[variables('diagnosticsStorageDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/storage-account.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('keyVaultDiagnosticStorageAccountName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "operationsStorageAccountName": {
      "type": "string",
      "value": "[variables('operationsStorageName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "statusFunctionServicePrincipalId": {
      "type": "string",
      "value": "[reference(variables('statusFunctionDeployName')).outputs.servicePrincipalId.value]"
    },
    "controlFunctionServicePrincipalId": {
      "type": "string",
      "value": "[reference(variables('controlFunctionDeployName')).outputs.servicePrincipalId.value]"
    }
  }
}

